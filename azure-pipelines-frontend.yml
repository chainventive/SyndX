# SyndX Build Pipeline

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - dapp/frontend

resources:
  pipelines:
  - pipeline: "syndx.backend.ressource"
    source: "[release] syndx.backend"
    trigger: 
      branches:
        - main
      stages: 
        - Publish

steps:

  # Fix bugs with use of DownloadSecureFile task
  - task: PowerShell@2
    displayName: 'Set CA Cert'
    inputs:
      targetType: inline
      script: |
        if ($env:AGENT_HOMEDIRECTORY -ne $null) { $TargetFolder = $env:AGENT_HOMEDIRECTORY }
        else { $TargetFolder = [System.Environment]::GetEnvironmentVariable('TEMP','Machine') }
        Get-ChildItem -Path Cert:\LocalMachine\CA | ForEach-Object {
          $Cert = "-----BEGIN CERTIFICATE-----`n"
          $Cert+= $([System.Convert]::ToBase64String($_.export([System.Security.Cryptography.X509Certificates.X509ContentType]::Cert),'InsertLineBreaks'))
          $Cert+= "`n-----END CERTIFICATE-----`n"
          $Chain+= $Cert
        }
        $CertFile = "$TargetFolder\TrustedRootCAs.pem"
        $Chain | Out-File $CertFile -Force -Encoding ASCII
        $Chain = $null
        Write-Host "##vso[task.setvariable variable=NODE.EXTRA.CA.CERTS]$CertFile"

    # Install Docker CLI
  - task: DockerInstaller@0
    displayName: 'Install Docker CLI'
    inputs:
      dockerVersion: '24.0.7'

    # Download the secured .env
  - task: DownloadSecureFile@1
    inputs:
      secureFile: ‘.env’

    # Build the docker image to check if everything is ok
  - script: |
      docker build -t syndx .
    displayName: 'Build docker image'
    workingDirectory: ./dapp/frontend

    # Create docker image artifact
  - script: |
      docker save -o $(Build.ArtifactStagingDirectory)/syndx.tar syndx
    displayName: 'Create docker image artifact'
    workingDirectory: ./dapp/frontend

    # Publish the artifacts folder for release pipeline use
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'syndx-build-drop'
      publishLocation: 'Container'