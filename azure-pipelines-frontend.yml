# SyndX Build Pipeline

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - dapp/frontend

resources:
  pipelines:
  - pipeline: "syndx.backend.ressource"
    source: "[release] syndx.backend"
    trigger: 
      branches:
        - main
      stages: 
        - Publish

steps:

    # Install Docker CLI
  - task: DockerInstaller@0
    displayName: 'Install Docker CLI'
    inputs:
      dockerVersion: '24.0.7'

  - script: |
      touch .env
      echo "NEXT_PUBLIC_ALCHEMY_API_KEY=$(NEXT_PUBLIC_ALCHEMY_API_KEY)" >> .env
      echo "NEXT_PUBLIC_WALLET_CONNECT_PROJECT_NAME=$(NEXT_PUBLIC_WALLET_CONNECT_PROJECT_NAME)" >> .env
      echo "NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID=$(NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID)" >> .env
      echo "NEXT_PUBLIC_CONTRACT_ADDRESS=$(NEXT_PUBLIC_CONTRACT_ADDRESS)" >> .env
      echo "NEXT_PUBLIC_CONTRACT_NETWORK=$(NEXT_PUBLIC_CONTRACT_NETWORK)" >> .env
      echo "NEXT_PUBLIC_CONTRACT_BLOCK_NUMBER=$(NEXT_PUBLIC_CONTRACT_BLOCK_NUMBER)" >> .env
    displayName: 'Creating environnement variables'
    workingDirectory: ./dapp/frontend


    # Build the docker image to check if everything is ok
  - script: |
      docker build -t syndx .
    displayName: 'Build docker image'
    workingDirectory: ./dapp/frontend

    # Create docker image artifact
  - script: |
      docker save -o $(Build.ArtifactStagingDirectory)/syndx.tar syndx
    displayName: 'Create docker image artifact'
    workingDirectory: ./dapp/frontend

    # Publish the artifacts folder for release pipeline use
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'syndx-build-drop'
      publishLocation: 'Container'